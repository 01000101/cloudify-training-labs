tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.4/plugin.yaml

inputs:
  # General
  aws_access_key_id:
    type: string
  aws_secret_access_key:
    type: string
  ec2_region_name:
    type: string
  # VPC
  vpc_id:
    type: string
    default: ''
  # Subnet
  existing_subnet_id:
    type: string
  # Keypair
  keypair_name:
    type: string
  private_key_path:
    type: string
  # CLI
  cli_image_id:
    type: string
  cli_instance_type:
    type: string
  # CLI security group
  cli_security_group_id:
    type: string
  cli_ssh_user:
    type: string
    default: centos
  # Manager
  manager_image_id:
    type: string
  manager_instance_type:
    type: string
  # Manager security group
  manager_security_group_id:
    type: string
  manager_ssh_user:
    type: string
    default: centos

dsl_definitions:
  aws_config: &aws_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: ec2_region_name }
  cli_fabric_env: &cli_fabric_env
    host_string: { get_attribute: [ cli_vm, public_ip_address ]}
    user: { get_input: cli_ssh_user }
    key_filename: { get_property: [ keypair, private_key_path ] }

node_templates:
  keypair:
    type: cloudify.aws.nodes.KeyPair
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: keypair_name }
      private_key_path: { get_input: private_key_path }
  vpc:
    type: cloudify.aws.nodes.VPC
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: vpc_id }
      cidr_block: ''
  subnet:
    type: cloudify.aws.nodes.Subnet
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: existing_subnet_id }
      cidr_block: ''
    relationships:
      - type: cloudify.aws.relationships.subnet_contained_in_vpc
        target: vpc
  cli_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: cli_security_group_id }
      description: ''
    relationships:
      - target: vpc
        type: cloudify.aws.relationships.security_group_contained_in_vpc
  manager_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: manager_security_group_id }
      description: ''
    relationships:
      - target: vpc
        type: cloudify.aws.relationships.security_group_contained_in_vpc
  cli_ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      aws_config: *aws_config
      domain: vpc
  cli_vm:
    type: cloudify.aws.nodes.Instance
    properties:
      aws_config: *aws_config
      agent_config:
        install_method: none
      image_id: { get_input: cli_image_id }
      instance_type: { get_input: cli_instance_type }
      name: cli
    relationships:
      - target: keypair
        type: cloudify.aws.relationships.instance_connected_to_keypair
      - target: cli_ip
        type: cloudify.aws.relationships.instance_connected_to_elastic_ip
      - target: cli_security_group
        type: cloudify.aws.relationships.instance_connected_to_security_group
      - target: subnet
        type: cloudify.aws.relationships.instance_contained_in_subnet
  cli_configuration:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: fabric.fabric_plugin.tasks.run_commands
          inputs:
            fabric_env: *cli_fabric_env
            commands:
              - sudo yum -y install unzip git
    relationships:
      - target: cli_vm
        type: cloudify.relationships.contained_in
  manager_vm:
    type: cloudify.aws.nodes.Instance
    properties:
      aws_config: *aws_config
      agent_config:
        install_method: none
      image_id: { get_input: manager_image_id }
      instance_type: { get_input: manager_instance_type }
      name: manager
    relationships:
      - target: keypair
        type: cloudify.aws.relationships.instance_connected_to_keypair
      - target: manager_security_group
        type: cloudify.aws.relationships.instance_connected_to_security_group
      - target: subnet
        type: cloudify.aws.relationships.instance_contained_in_subnet
