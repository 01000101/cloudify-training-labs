tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4rc1/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.4/plugin.yaml

inputs:
  cli_image_id:
    type: string
  cli_instance_type:
    type: string
  cli_ssh_user:
    type: string
    default: centos
  manager_image_id:
    type: string
  manager_instance_type:
    type: string
  aws_access_key_id:
    type: string
  aws_secret_access_key:
    type: string
  ec2_region_name:
    type: string
    default: us-east-1
  vpc_id:
    type: string
  subnet_id:
    type: string
  cidr_block:
    type: string
  keypair_name:
    type: string
  key_filename:
    type: string
  use_existing_cli_security_group:
    type: boolean
  cli_security_group_id:
    type: string
    default: ''
  use_existing_manager_security_group:
    type: boolean
  manager_security_group_id:
    type: string
    default: ''
  labs_branch:
    type: string
  student_count:
    type: integer
    default: 1

dsl_definitions:
  aws_config: &aws_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: ec2_region_name}

  cli_fabric_env: &cli_fabric_env
    user: { get_input: cli_ssh_user }
    key_filename: { get_input: key_filename }
    host_string: { get_attribute: [ cli, public_ip_address ] }

node_templates:
  vpc:
    type: cloudify.aws.nodes.VPC
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: vpc_id }
      cidr_block: { get_input: cidr_block }

  subnet:
    type: cloudify.aws.nodes.Subnet
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: subnet_id }
      cidr_block: { get_input: cidr_block }
    relationships:
      - type: cloudify.aws.relationships.subnet_contained_in_vpc
        target: vpc

  keypair:
    type: cloudify.aws.nodes.KeyPair
    properties:
      aws_config: *aws_config
      use_external_resource: true
      resource_id: { get_input: keypair_name }
      private_key_path: { get_input: key_filename }

  cli_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      aws_config: *aws_config
      use_external_resource: { get_input: use_existing_cli_security_group }
      resource_id: { get_input: cli_security_group_id }
      description: Cloudify Training (CLI)
      rules:
        - ip_protocol: TCP
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - ip_protocol: TCP
          from_port: 8000
          to_port: 8000
          cidr_ip: 0.0.0.0/0
    relationships:
      - type: cloudify.aws.relationships.security_group_contained_in_vpc
        target: vpc

  cli_ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      domain: vpc
      aws_config: *aws_config

  cli:
    type: cloudify.aws.nodes.Instance
    properties:
      image_id: { get_input: cli_image_id }
      instance_type: { get_input: cli_instance_type }
      aws_config: *aws_config
      name: cli
      agent_config:
        install_method: none
    relationships:
      - target: keypair
        type: cloudify.aws.relationships.instance_connected_to_keypair
      - target: subnet
        type: cloudify.aws.relationships.instance_contained_in_subnet
      - target: cli_ip
        type: cloudify.aws.relationships.instance_connected_to_elastic_ip
      - target: cli_security_group
        type: cloudify.aws.relationships.instance_connected_to_security_group

  cli_configuration:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_commands
          inputs:
            commands:
              - sudo yum -y install unzip git
              - { concat: ['git clone -b ', { get_input: labs_branch }, ' https://github.com/cloudify-cosmo/cloudify-training-labs'] }
            fabric_env: *cli_fabric_env
    relationships:
      - target: cli
        type: cloudify.relationships.contained_in

  manager_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      aws_config: *aws_config
      use_external_resource: { get_input: use_existing_manager_security_group }
      resource_id: { get_input: manager_security_group_id }
      description: Cloudify Training (manager)
      rules:
        - ip_protocol: TCP
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - ip_protocol: TCP
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - ip_protocol: TCP
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - ip_protocol: TCP
          from_port: 53229
          to_port: 53229
          cidr_ip: { get_input: cidr_block }
        - ip_protocol: TCP
          from_port: 5672
          to_port: 5672
          cidr_ip: { get_input: cidr_block }
        - ip_protocol: TCP
          from_port: 8101
          to_port: 8101
          cidr_ip: { get_input: cidr_block }
    relationships:
      - type: cloudify.aws.relationships.security_group_contained_in_vpc
        target: vpc

  manager:
    type: cloudify.aws.nodes.Instance
    properties:
      image_id: { get_input: manager_image_id }
      instance_type: { get_input: manager_instance_type }
      aws_config: *aws_config
      name: manager
      agent_config:
        install_method: none
    relationships:
      - target: keypair
        type: cloudify.aws.relationships.instance_connected_to_keypair
      - target: subnet
        type: cloudify.aws.relationships.instance_contained_in_subnet
      - target: manager_security_group
        type: cloudify.aws.relationships.instance_connected_to_security_group

#groups:
#  cli_group:
#    members: [cli, cli_ip]
#  manager_group:
#    members: [manager]

#policies:
#  scale_cli:
#    type: cloudify.policies.scaling
#    properties:
#      default_instances: { get_input: student_count }
#    targets: [cli_group]
#  scale_manager:
#    type: cloudify.policies.scaling
#    properties:
#      default_instances: { get_input: student_count }
#    targets: [manager_group]

